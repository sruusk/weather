// Mocks generated by Mockito 5.4.5 from annotations
// in weather/test/home_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i6;

import 'package:flutter/foundation.dart' as _i5;
import 'package:flutter/material.dart' as _i11;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i12;
import 'package:weather/app_state.dart' as _i10;
import 'package:weather/data/forecast.dart' as _i3;
import 'package:weather/data/forecast_point.dart' as _i2;
import 'package:weather/data/location.dart' as _i4;
import 'package:weather/preferences.dart' as _i7;
import 'package:weather/repositories/weather_repository.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeForecastPoint_0 extends _i1.SmartFake implements _i2.ForecastPoint {
  _FakeForecastPoint_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeForecast_1 extends _i1.SmartFake implements _i3.Forecast {
  _FakeForecast_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocation_2 extends _i1.SmartFake implements _i4.Location {
  _FakeLocation_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeValueNotifier_3<T> extends _i1.SmartFake
    implements _i5.ValueNotifier<T> {
  _FakeValueNotifier_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocale_4 extends _i1.SmartFake implements _i6.Locale {
  _FakeLocale_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePreferencesNotifier_5 extends _i1.SmartFake
    implements _i7.PreferencesNotifier {
  _FakePreferencesNotifier_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WeatherRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRepository extends _i1.Mock implements _i8.WeatherRepository {
  MockWeatherRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.ForecastPoint> getCurrentWeather(_i4.Location? location) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentWeather,
          [location],
        ),
        returnValue: _i9.Future<_i2.ForecastPoint>.value(_FakeForecastPoint_0(
          this,
          Invocation.method(
            #getCurrentWeather,
            [location],
          ),
        )),
      ) as _i9.Future<_i2.ForecastPoint>);

  @override
  _i9.Future<_i3.Forecast> getForecast(
    _i4.Location? location, {
    bool? forceRefresh = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getForecast,
          [location],
          {#forceRefresh: forceRefresh},
        ),
        returnValue: _i9.Future<_i3.Forecast>.value(_FakeForecast_1(
          this,
          Invocation.method(
            #getForecast,
            [location],
            {#forceRefresh: forceRefresh},
          ),
        )),
      ) as _i9.Future<_i3.Forecast>);

  @override
  _i9.Future<_i4.Location> reverseGeocoding(
    double? lat,
    double? lon, {
    String? lang = 'en',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #reverseGeocoding,
          [
            lat,
            lon,
          ],
          {#lang: lang},
        ),
        returnValue: _i9.Future<_i4.Location>.value(_FakeLocation_2(
          this,
          Invocation.method(
            #reverseGeocoding,
            [
              lat,
              lon,
            ],
            {#lang: lang},
          ),
        )),
      ) as _i9.Future<_i4.Location>);

  @override
  _i9.Future<List<_i4.Location>> getAutoCompleteResults(
    String? query, {
    String? lang = 'en',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAutoCompleteResults,
          [query],
          {#lang: lang},
        ),
        returnValue: _i9.Future<List<_i4.Location>>.value(<_i4.Location>[]),
      ) as _i9.Future<List<_i4.Location>>);

  @override
  void clearCache() => super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearCacheForLocation(_i4.Location? location) => super.noSuchMethod(
        Invocation.method(
          #clearCacheForLocation,
          [location],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setCacheExpirationDuration(Duration? duration) => super.noSuchMethod(
        Invocation.method(
          #setCacheExpirationDuration,
          [duration],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AppState].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppState extends _i1.Mock implements _i10.AppState {
  MockAppState() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<void> get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);

  @override
  _i5.ValueNotifier<_i6.Locale> get localeNotifier => (super.noSuchMethod(
        Invocation.getter(#localeNotifier),
        returnValue: _FakeValueNotifier_3<_i6.Locale>(
          this,
          Invocation.getter(#localeNotifier),
        ),
      ) as _i5.ValueNotifier<_i6.Locale>);

  @override
  _i5.ValueNotifier<String> get temperatureUnitNotifier => (super.noSuchMethod(
        Invocation.getter(#temperatureUnitNotifier),
        returnValue: _FakeValueNotifier_3<String>(
          this,
          Invocation.getter(#temperatureUnitNotifier),
        ),
      ) as _i5.ValueNotifier<String>);

  @override
  _i5.ValueNotifier<bool> get notificationsEnabledNotifier =>
      (super.noSuchMethod(
        Invocation.getter(#notificationsEnabledNotifier),
        returnValue: _FakeValueNotifier_3<bool>(
          this,
          Invocation.getter(#notificationsEnabledNotifier),
        ),
      ) as _i5.ValueNotifier<bool>);

  @override
  _i5.ValueNotifier<bool> get geolocationEnabledNotifier => (super.noSuchMethod(
        Invocation.getter(#geolocationEnabledNotifier),
        returnValue: _FakeValueNotifier_3<bool>(
          this,
          Invocation.getter(#geolocationEnabledNotifier),
        ),
      ) as _i5.ValueNotifier<bool>);

  @override
  _i5.ValueNotifier<_i11.ThemeMode> get themeModeNotifier =>
      (super.noSuchMethod(
        Invocation.getter(#themeModeNotifier),
        returnValue: _FakeValueNotifier_3<_i11.ThemeMode>(
          this,
          Invocation.getter(#themeModeNotifier),
        ),
      ) as _i5.ValueNotifier<_i11.ThemeMode>);

  @override
  _i5.ValueNotifier<bool> get isAmoledThemeNotifier => (super.noSuchMethod(
        Invocation.getter(#isAmoledThemeNotifier),
        returnValue: _FakeValueNotifier_3<bool>(
          this,
          Invocation.getter(#isAmoledThemeNotifier),
        ),
      ) as _i5.ValueNotifier<bool>);

  @override
  _i5.ValueNotifier<List<_i4.Location>> get favouriteLocationsNotifier =>
      (super.noSuchMethod(
        Invocation.getter(#favouriteLocationsNotifier),
        returnValue: _FakeValueNotifier_3<List<_i4.Location>>(
          this,
          Invocation.getter(#favouriteLocationsNotifier),
        ),
      ) as _i5.ValueNotifier<List<_i4.Location>>);

  @override
  _i5.ValueNotifier<_i4.Location?> get activeLocationNotifier =>
      (super.noSuchMethod(
        Invocation.getter(#activeLocationNotifier),
        returnValue: _FakeValueNotifier_3<_i4.Location?>(
          this,
          Invocation.getter(#activeLocationNotifier),
        ),
      ) as _i5.ValueNotifier<_i4.Location?>);

  @override
  _i5.ValueNotifier<_i4.Location?> get geoLocationNotifier =>
      (super.noSuchMethod(
        Invocation.getter(#geoLocationNotifier),
        returnValue: _FakeValueNotifier_3<_i4.Location?>(
          this,
          Invocation.getter(#geoLocationNotifier),
        ),
      ) as _i5.ValueNotifier<_i4.Location?>);

  @override
  _i5.ValueNotifier<bool> get syncFavouritesToAppwriteNotifier =>
      (super.noSuchMethod(
        Invocation.getter(#syncFavouritesToAppwriteNotifier),
        returnValue: _FakeValueNotifier_3<bool>(
          this,
          Invocation.getter(#syncFavouritesToAppwriteNotifier),
        ),
      ) as _i5.ValueNotifier<bool>);

  @override
  _i6.Locale get locale => (super.noSuchMethod(
        Invocation.getter(#locale),
        returnValue: _FakeLocale_4(
          this,
          Invocation.getter(#locale),
        ),
      ) as _i6.Locale);

  @override
  String get temperatureUnit => (super.noSuchMethod(
        Invocation.getter(#temperatureUnit),
        returnValue: _i12.dummyValue<String>(
          this,
          Invocation.getter(#temperatureUnit),
        ),
      ) as String);

  @override
  bool get notificationsEnabled => (super.noSuchMethod(
        Invocation.getter(#notificationsEnabled),
        returnValue: false,
      ) as bool);

  @override
  bool get geolocationEnabled => (super.noSuchMethod(
        Invocation.getter(#geolocationEnabled),
        returnValue: false,
      ) as bool);

  @override
  _i11.ThemeMode get themeMode => (super.noSuchMethod(
        Invocation.getter(#themeMode),
        returnValue: _i11.ThemeMode.system,
      ) as _i11.ThemeMode);

  @override
  bool get isAmoledTheme => (super.noSuchMethod(
        Invocation.getter(#isAmoledTheme),
        returnValue: false,
      ) as bool);

  @override
  List<_i4.Location> get favouriteLocations => (super.noSuchMethod(
        Invocation.getter(#favouriteLocations),
        returnValue: <_i4.Location>[],
      ) as List<_i4.Location>);

  @override
  bool get syncFavouritesToAppwrite => (super.noSuchMethod(
        Invocation.getter(#syncFavouritesToAppwrite),
        returnValue: false,
      ) as bool);

  @override
  _i7.PreferencesNotifier get preferencesNotifier => (super.noSuchMethod(
        Invocation.getter(#preferencesNotifier),
        returnValue: _FakePreferencesNotifier_5(
          this,
          Invocation.getter(#preferencesNotifier),
        ),
      ) as _i7.PreferencesNotifier);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setLocale(_i6.Locale? locale) => super.noSuchMethod(
        Invocation.method(
          #setLocale,
          [locale],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setTemperatureUnit(String? unit) => super.noSuchMethod(
        Invocation.method(
          #setTemperatureUnit,
          [unit],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setNotificationsEnabled(bool? enabled) => super.noSuchMethod(
        Invocation.method(
          #setNotificationsEnabled,
          [enabled],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setThemeMode(_i11.ThemeMode? mode) => super.noSuchMethod(
        Invocation.method(
          #setThemeMode,
          [mode],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setGeolocationEnabled(bool? enabled) => super.noSuchMethod(
        Invocation.method(
          #setGeolocationEnabled,
          [enabled],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setSyncFavouritesToAppwrite(bool? enabled) => super.noSuchMethod(
        Invocation.method(
          #setSyncFavouritesToAppwrite,
          [enabled],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setAmoledTheme(bool? enabled) => super.noSuchMethod(
        Invocation.method(
          #setAmoledTheme,
          [enabled],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addFavouriteLocation(
    _i4.Location? location, {
    bool? sync = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #addFavouriteLocation,
          [location],
          {#sync: sync},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeAllLocalFavouriteLocations() => super.noSuchMethod(
        Invocation.method(
          #removeAllLocalFavouriteLocations,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeFavouriteLocation(
    _i4.Location? location, {
    bool? sync = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #removeFavouriteLocation,
          [location],
          {#sync: sync},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setActiveLocation(_i4.Location? location) => super.noSuchMethod(
        Invocation.method(
          #setActiveLocation,
          [location],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setGeolocation(_i4.Location? location) => super.noSuchMethod(
        Invocation.method(
          #setGeolocation,
          [location],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void reorderFavouriteLocations(
    int? oldIndex,
    int? newIndex,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #reorderFavouriteLocations,
          [
            oldIndex,
            newIndex,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
